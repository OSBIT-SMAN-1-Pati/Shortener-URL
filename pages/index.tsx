import { useFormik,Formik,Form,Field,ErrorMessage} from "formik";
import type { NextPage } from "next";
import Head from "next/head";
import { useMutation } from "@tanstack/react-query";
import { useState } from "react";
import * as yup from "yup"

type formData = {
  longUrl : string,
  shortUrl :string
}

const Index: NextPage = () => {
  const mutation = useMutation({
    mutationFn: async (newUrl:formData)=>{
      return  fetch('api/hash',{
      method: "POST",
      body: JSON.stringify(newUrl)
    }).then(res=>res.json())
    }
  })
  // const [message,setMessage] = useState()
  const initialValues = {
    longUrl : "",
    shortUrl:""
  }
  const onSubmit = async (values:formData)=>{
    const {longUrl,shortUrl} = values
    const req = {
      longUrl,
      shortUrl
    }
    mutation.mutate(req) 
    
  }
  const validate = (values:formData)=>{
    const errors = {
      longUrl : ""
    }
    if(!values.longUrl){
      errors.longUrl = "Requierd"
    } else if(!/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/.test(values.longUrl)){
      errors.longUrl = "Invalid"
    }
    return errors
  }
  
  const schema = yup.object().shape({
    longUrl : yup.string().matches(/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/,"Invalid").required("Required"),
    shortUrl : yup.string().nullable()
  })
  const formik = useFormik({
      initialValues,
      onSubmit
    }
  )

  return (
    <>
      <Head>
        <title>shortener-url</title>
        <meta name="description" content="Generated by Create Next Stack." />
      </Head>
      <h1>Welcome to OSBIT Shortener URL</h1>
      <h1>{mutation.isLoading ? "Loading":"" }</h1>
      <p>{mutation.data?.message}</p>
      <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={schema}>
        <Form className="flex flex-col w-96">
          <label htmlFor="longUrl">Input</label>
          <Field type="text" id="longUrl" name="longUrl"/>
          <ErrorMessage name="longUrl"/>
          <label htmlFor="shortUrl">shorten</label>
          <Field type="text" id="shortUrl" name="shortUrl"/>
         <button type="submit">Submit</button>
        </Form>
      </Formik>
    </>
  );
};

export default Index;