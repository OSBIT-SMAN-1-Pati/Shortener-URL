// import { useFormik,Formik,Form,Field} from "formik";
// import type { NextPage } from "next";
// import Head from "next/head";
// import { useState } from "react";


// const Index: NextPage = () => {
//   const [message,setMessage] = useState()
//   const initialValues = {
//     longUrl : "",
//     shortUrl:""
//   }
//   const onSubmit = async (values:formData)=>{
//     const {longUrl,shortUrl} = values
//     const data = {
//       long: longUrl,
//       short:shortUrl
//     }
//     const response = await fetch('api/hello',{
//       method: "POST",
//       body: JSON.stringify(data)
//     })
//     const {message} = await response.json()
//     setMessage(message)
//   }

//   const formik = useFormik({
//       initialValues,
//       onSubmit
//     }
//   )

//   return (
//     <>
//       <Head>
//         <title>shortener-url</title>
//         <meta name="description" content="Generated by Create Next Stack." />
//       </Head>
//       <h1>Welcome to OSBIT Shortener URL</h1>
//       <p>{message}</p>
//       <Formik initialValues={initialValues} onSubmit={onSubmit} >
//         <Form className="flex flex-col w-96">
//           <label htmlFor="url-input">Input</label>
//           <Field type="text" id="url-input" name="longUrl"/>
//           <label htmlFor="url-shorten">shorten</label>
//           <Field type="text" id="shorten-url" name="shortUrl"/>
//          <button type="submit">Submit</button>
//         </Form>
//       </Formik>
//     </>
//   );
// };

// export default Index;
import { NextPage } from "next";
import { useState } from 'react'
import Head from "next/head";
import Image from "next/image";
import {  useFormik } from "formik";
import getMetaTags from "../utils/extractMetaTag";


type formData = {
  longURL : string,
  shortURL :string
}

const Index: NextPage = () => {
  const [website, setWebsite] = useState({title: "", logo: "https://placehold.co/400x400"});
  const validateInput = (value: string) => {
    const allowedPattern = /^[a-zA-Z0-9-_]+$/;
    if (value.length < 5) {
      return "Panjang URL minimal 5 huruf";
    }
    if (!allowedPattern.test(value)) {
      return "Hanya memperbolehkan huruf, angka, hypens(-), underscore(_)!"
    }
    return;
  }
  const formik = useFormik({
    initialValues: {
      longURL: "",

      shortURL: "",
    },

    validate: async (values: formData) => {
      let {longURL, shortURL} = values
      if (formik.touched.shortURL) {
        formik.errors.shortURL = validateInput(shortURL) || ""
      }
      if (formik.touched.longURL) {
        const allowedPattern = /^(https?:\/\/)?([a-z0-9-]+\.)+[a-z]{2,}(\/[^\s]*)?$/
        if (!longURL.startsWith("https://")) {
          longURL = "https://" + longURL
        }
        if (!allowedPattern.test(longURL)) {
          formik.errors.longURL = "Berikan URL valid seperti contohlink.com/about-page"
          return
        }
        formik.errors.longURL = ""
        
        const res = await fetch("/api/metascrap", {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          }, 
          body: JSON.stringify({
            "longURL": longURL,
          }),
        })
        const { msg }  = await res.json()
        setWebsite({
          title: msg.title,
          logo: msg.icon
        })
      }
      
      
    },
    validateOnChange: false,
    validateOnBlur: true,
    onSubmit: async (values: formData) => {
      const {longURL, shortURL} = values
      console.log(longURL + " " + shortURL)
      if (!formik.errors.longURL && !formik.errors.shortURL) {
        console.log('Proses submit...')
        const data = {
          long: longURL,
          short: shortURL
        }
        const response = await fetch('api/hello',{
          method: " ",
          body: JSON.stringify(data)
        })
        console.log('Form tersubmit')
      }
    },
  });
  return (
    <>
      <Head>
        <title>shortener-url</title>
        <meta name="description" content="Generated by Create Next Stack." />
      </Head>
      <h1>Welcome to OSBIT Shortener URL</h1>
      <p>Try changes the url to see what will happen</p>
      <p>URL:</p>
      <p>1. /Youtube</p>
      <p>2. /instagaram</p>
      <p>3. /facebook</p>
      <p>{formik.values.longURL}</p>
      <form onSubmit={formik.handleSubmit}>
        <label htmlFor="longURL">Ketik URL</label>

        <input
          id="longURL"
          name="longURL"
          type="text"
          onChange={formik.handleChange}
          onBlur={formik.handleBlur}
          value={formik.values.longURL}
        />
        {formik.touched.longURL && formik.errors.longURL && ( <p id="errorMessage" className="text-red-600">{formik.errors.longURL}</p>)}
        <label htmlFor="shortURL">Ketik custom URL (opsional)</label>

        <input
          id="shortURL"
          name="shortURL"
          type="text"
          onChange={formik.handleChange}
          onBlur={formik.handleBlur}
          value={formik.values.shortURL}
          
        />
        {formik.touched.shortURL && formik.errors.shortURL && ( <p id="errorMessage" className="text-red-600">{formik.errors.shortURL}</p>)}
        <div>
          <Image id="websiteLogo" src={website.logo} alt="Website Logo" width="100" height="100" />
          <p id="websiteTitle">{website.title}</p>
        </div>
        
        <button type="submit" className="p-10 border border-black">Submit</button>
      
      </form>
    </>
  );
};

export default Index;
